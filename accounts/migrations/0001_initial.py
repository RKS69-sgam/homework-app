# Generated by Django 5.2.5 on 2025-08-08 13:17

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='Gmail ID')),
                ('user_name', models.CharField(max_length=100)),
                ('father_name', models.CharField(blank=True, max_length=100, null=True)),
                ('mobile_number', models.CharField(blank=True, max_length=15, null=True)),
                ('role', models.CharField(choices=[('Student', 'Student'), ('Teacher', 'Teacher'), ('Admin', 'Admin'), ('Principal', 'Principal')], max_length=10)),
                ('user_class', models.CharField(blank=True, max_length=10, null=True, verbose_name='Class')),
                ('is_confirmed', models.BooleanField(default=False, verbose_name='Confirmed (for Staff)')),
                ('payment_confirmed', models.BooleanField(default=False, verbose_name='Payment Confirmed (for Students)')),
                ('subscription_plan', models.CharField(blank=True, max_length=100, null=True)),
                ('subscription_date', models.DateField(blank=True, null=True)),
                ('subscribed_till', models.DateField(blank=True, null=True)),
                ('parent_phonepe', models.CharField(blank=True, max_length=15, null=True)),
                ('security_question', models.CharField(max_length=255)),
                ('security_answer', models.CharField(max_length=255)),
                ('instructions', models.TextField(blank=True, null=True)),
                ('instruction_reply', models.TextField(blank=True, null=True)),
                ('instruction_status', models.CharField(blank=True, max_length=20, null=True)),
                ('salary_points', models.IntegerField(default=0)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='HomeworkQuestion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question_class', models.CharField(max_length=10, verbose_name='Class')),
                ('date', models.DateField()),
                ('subject', models.CharField(max_length=100)),
                ('question', models.TextField()),
                ('model_answer', models.TextField()),
                ('due_date', models.DateField()),
                ('uploaded_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='StudentAnswer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('answer', models.TextField()),
                ('marks', models.IntegerField(blank=True, null=True)),
                ('remarks', models.TextField(blank=True, null=True)),
                ('attempt_status', models.IntegerField(default=0)),
                ('help_request', models.TextField(blank=True, null=True)),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.homeworkquestion')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
